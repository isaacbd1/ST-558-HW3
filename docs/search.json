[
  {
    "objectID": "Control Flow and Functions Assignment.html",
    "href": "Control Flow and Functions Assignment.html",
    "title": "Control Flow and Functions Assignment",
    "section": "",
    "text": "Before we begin, we need to load the data from the file hw2_list.rda.\nload(\"hw2_list.rda\")\nThis gives us a list called bp_list with 2 elements called “treatment” and “placebo” (both being data frames) in our environment.\nbp_list\n\n$treatment\n              patient pre_bp post_bp diff_bp normal\nSubject_1   Subject_1    120     127      -7  FALSE\nSubject_2   Subject_2    151     145       6  FALSE\nSubject_3   Subject_3    125     135     -10  FALSE\nSubject_4   Subject_4    126     122       4  FALSE\nSubject_5   Subject_5    115     115       0   TRUE\nSubject_6   Subject_6    132     122      10  FALSE\nSubject_7   Subject_7    132     123       9  FALSE\nSubject_8   Subject_8    129     126       3  FALSE\nSubject_9   Subject_9    134     126       8  FALSE\nSubject_10 Subject_10    139     129      10  FALSE\nSubject_11 Subject_11    127     132      -5  FALSE\nSubject_12 Subject_12    122     146     -24  FALSE\nSubject_13 Subject_13    127     120       7  FALSE\nSubject_14 Subject_14    135     114      21   TRUE\nSubject_15 Subject_15    133     121      12  FALSE\nSubject_16 Subject_16    128     120       8  FALSE\nSubject_17 Subject_17    147     128      19  FALSE\nSubject_18 Subject_18    138     120      18  FALSE\nSubject_19 Subject_19    140     133       7  FALSE\nSubject_20 Subject_20    132     115      17   TRUE\n\n$placebo\n      patient pre_bp post_bp diff_bp normal\n1   Subject_1    138     105      33   TRUE\n2   Subject_2    135     136      -1  FALSE\n3   Subject_3    147     123      24  FALSE\n4   Subject_4    117     130     -13  FALSE\n5   Subject_5    152     134      18  FALSE\n6   Subject_6    134     143      -9  FALSE\n7   Subject_7    114     135     -21  FALSE\n8   Subject_8    121     139     -18  FALSE\n9   Subject_9    131     120      11  FALSE\n10 Subject_10    130     124       6  FALSE"
  },
  {
    "objectID": "Control Flow and Functions Assignment.html#task-1-control-flow-practice",
    "href": "Control Flow and Functions Assignment.html#task-1-control-flow-practice",
    "title": "Control Flow and Functions Assignment",
    "section": "Task 1: Control Flow Practice",
    "text": "Task 1: Control Flow Practice\nFirst, we extract the data frames from the list we loaded.\n\ntreatment_df &lt;- bp_list$treatment\nplacebo_df &lt;- bp_list$placebo\n\nNext, we create a new column for each data frame called status.\n\ntreatment_df$status &lt;- character(20)\nplacebo_df$status &lt;- character(10) #10 since placebo_df has just 10 rows\n\nNow, first for the treatment data frame, we write a for loop to create the status column’s values.\n\nfor (i in 1:20) {\n  if (treatment_df$post_bp[i] &lt;= 120) {\n    treatment_df$status[i] &lt;- \"Optimal\"\n  } \n  else if (treatment_df$post_bp[i] &gt; 120 & treatment_df$post_bp[i] &lt;= 130) {\n    treatment_df$status[i] &lt;- \"Borderline\"\n  } \n  else if (treatment_df$post_bp[i] &gt; 130) {\n    treatment_df$status[i] &lt;- \"High\"\n  }\n  else {\n    next\n  }\n}\n\nTo show our code is working as intended, below we display the new treatment data frame with the updated status entries.\n\ntreatment_df\n\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE Borderline\nSubject_2   Subject_2    151     145       6  FALSE       High\nSubject_3   Subject_3    125     135     -10  FALSE       High\nSubject_4   Subject_4    126     122       4  FALSE Borderline\nSubject_5   Subject_5    115     115       0   TRUE    Optimal\nSubject_6   Subject_6    132     122      10  FALSE Borderline\nSubject_7   Subject_7    132     123       9  FALSE Borderline\nSubject_8   Subject_8    129     126       3  FALSE Borderline\nSubject_9   Subject_9    134     126       8  FALSE Borderline\nSubject_10 Subject_10    139     129      10  FALSE Borderline\nSubject_11 Subject_11    127     132      -5  FALSE       High\nSubject_12 Subject_12    122     146     -24  FALSE       High\nSubject_13 Subject_13    127     120       7  FALSE    Optimal\nSubject_14 Subject_14    135     114      21   TRUE    Optimal\nSubject_15 Subject_15    133     121      12  FALSE Borderline\nSubject_16 Subject_16    128     120       8  FALSE    Optimal\nSubject_17 Subject_17    147     128      19  FALSE Borderline\nSubject_18 Subject_18    138     120      18  FALSE    Optimal\nSubject_19 Subject_19    140     133       7  FALSE       High\nSubject_20 Subject_20    132     115      17   TRUE    Optimal\n\n\nLastly, we do almost the same thing, but now for the placebo data frame.\n\nfor (i in 1:10) {\n  if (placebo_df$post_bp[i] &lt;= 120) {\n    placebo_df$status[i] &lt;- \"Optimal\"\n  } \n  else if (placebo_df$post_bp[i] &gt; 120 & placebo_df$post_bp[i] &lt;= 130) {\n    placebo_df$status[i] &lt;- \"Borderline\"\n  } \n  else if (placebo_df$post_bp[i] &gt; 130) {\n    placebo_df$status[i] &lt;- \"High\"\n  }\n  else {\n    next\n  }\n}\n\nAnd below is the new placebo data frame with the status entries updated.\n\nplacebo_df\n\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    Optimal\n2   Subject_2    135     136      -1  FALSE       High\n3   Subject_3    147     123      24  FALSE Borderline\n4   Subject_4    117     130     -13  FALSE Borderline\n5   Subject_5    152     134      18  FALSE       High\n6   Subject_6    134     143      -9  FALSE       High\n7   Subject_7    114     135     -21  FALSE       High\n8   Subject_8    121     139     -18  FALSE       High\n9   Subject_9    131     120      11  FALSE    Optimal\n10 Subject_10    130     124       6  FALSE Borderline"
  },
  {
    "objectID": "Control Flow and Functions Assignment.html#task-2-function-writing",
    "href": "Control Flow and Functions Assignment.html#task-2-function-writing",
    "title": "Control Flow and Functions Assignment",
    "section": "Task 2: Function Writing",
    "text": "Task 2: Function Writing\nNext we want to write a function that takes in two data frames as input, takes in a statistic that would act on columns of the data frames (with default being the mean), and returns a list consisting of 6 labeled statistics obtained by having the user-given statistic act on the pre, post, and diff columns of the data frames.\n\nsummaryStatistics &lt;- function(treatment, placebo, stat = \"mean\") {\n  my_fun &lt;- get(stat) #retrieves the statistic used as argument\n  \n  #vector consisting of statistics on the pre, post, and diff columns of each data frame\n  statistics &lt;- c(my_fun(treatment$pre_bp), my_fun(treatment$post_bp), \n                  my_fun(treatment$diff_bp), my_fun(placebo$pre_bp),\n                  my_fun(placebo$post_bp), my_fun(placebo$diff_bp))\n  \n  #labels for each statistic\n  labels &lt;- c(paste(\"pre_treatment\", stat, sep=\"_\"), paste(\"post_treatment\", stat, sep=\"_\"), \n              paste(\"diff_treatment\", stat, sep=\"_\"), paste(\"pre_placebo\", stat, sep=\"_\"), \n              paste(\"post_placebo\", stat, sep=\"_\"), paste(\"diff_placebo\", stat, sep=\"_\"))\n  \n  names(statistics) &lt;- labels #applies the labels to the statistics\n  \n  return (as.list(statistics))\n}\n\nApplying our function to the two data frames from the previous task, if we do not specify an argument for the statistic, we see that the mean of the pre, post, and diff columns are returned in a list format:\n\nsummaryStatistics(treatment_df, placebo_df)\n\n$pre_treatment_mean\n[1] 131.6\n\n$post_treatment_mean\n[1] 125.95\n\n$diff_treatment_mean\n[1] 5.65\n\n$pre_placebo_mean\n[1] 131.9\n\n$post_placebo_mean\n[1] 128.9\n\n$diff_placebo_mean\n[1] 3\n\n\nNext we will apply our function to the two data frames, this time specifying the statistic as “var” (i.e. variance), “sd” (i.e. standard deviation), “min”, and “max.”\n\nsummaryStatistics(treatment_df, placebo_df, stat = \"var\")\n\n$pre_treatment_var\n[1] 75.72632\n\n$post_treatment_var\n[1] 78.99737\n\n$diff_treatment_var\n[1] 117.8184\n\n$pre_placebo_var\n[1] 149.8778\n\n$post_placebo_var\n[1] 124.9889\n\n$diff_placebo_var\n[1] 341.3333\n\n\n\nsummaryStatistics(treatment_df, placebo_df, stat = \"sd\")\n\n$pre_treatment_sd\n[1] 8.702087\n\n$post_treatment_sd\n[1] 8.888046\n\n$diff_treatment_sd\n[1] 10.85442\n\n$pre_placebo_sd\n[1] 12.24246\n\n$post_placebo_sd\n[1] 11.17984\n\n$diff_placebo_sd\n[1] 18.47521\n\n\n\nsummaryStatistics(treatment_df, placebo_df, stat = \"min\")\n\n$pre_treatment_min\n[1] 115\n\n$post_treatment_min\n[1] 114\n\n$diff_treatment_min\n[1] -24\n\n$pre_placebo_min\n[1] 114\n\n$post_placebo_min\n[1] 105\n\n$diff_placebo_min\n[1] -21\n\n\n\nsummaryStatistics(treatment_df, placebo_df, stat = \"max\")\n\n$pre_treatment_max\n[1] 151\n\n$post_treatment_max\n[1] 146\n\n$diff_treatment_max\n[1] 21\n\n$pre_placebo_max\n[1] 152\n\n$post_placebo_max\n[1] 143\n\n$diff_placebo_max\n[1] 33"
  }
]